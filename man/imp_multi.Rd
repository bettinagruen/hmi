% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmi_mainfunctions_2016-07-05.R, R/hmi_mainfunctions_2016-07-13.R
\name{imp_multi}
\alias{imp_multi}
\title{The main function called by the user. LATER THE USER WILL USE THE WRAPPER.}
\usage{
imp_multi(y_imp_multi, X_imp_multi, Z_imp_multi, clID, n.iter = 100, M = 10,
  n.chains = 3, burn.in = 1/3, max.iter = 5000, allowed_max_value = Inf,
  allowed_max_variable = NULL, allowed_min_value = -Inf,
  allowed_min_variable = NULL)

imp_multi(y_imp_multi, X_imp_multi, Z_imp_multi, clID, n.iter = 100, M = 10,
  n.chains = 3, burn.in = 1/3, max.iter = 5000, allowed_max_value = Inf,
  allowed_max_variable = NULL, allowed_min_value = -Inf,
  allowed_min_variable = NULL)
}
\arguments{
\item{y_imp_multi}{A Vector with the variable to impute.}

\item{X_imp_multi}{A data.frame with the fixed effects variables.}

\item{Z_imp_multi}{A data.frame with the random effects variables.}

\item{clID}{A vector with the cluster ID.}

\item{n.iter}{An integer defining the number of
iterations that should be run in each bunch of iterations.}

\item{M}{An integer defining the number of imputations that should be made.}

\item{n.chains}{An integer defining the number of Markov chains to be made.}

\item{burn.in}{A numeric between 0 and 1 defining the percentage of draws from the gibbs sampler
that should be discarded as burn in.}

\item{max.iter}{An integer defining the maximum number of
iterations that should be run in total.}

\item{allowed_max_value}{A single numeric Value which shall not be exceeded
when values are imputed (e.g. the age of a person can be limited to 125).}

\item{allowed_max_variable}{A character naming a variable V.
For each Y_i the value of V_i shall not exceeded
(e.g. the net income shall not exceed the gross income).
Note that a new imputed value has to satisfy both conditions of \code{allowed_max_value}
and \code{allowed_max_variable} at the same time.}

\item{allowed_min_value}{Analog to \code{allowed_max_value}.}

\item{allowed_min_variable}{Analog to \code{allowed_max_variable}.}

\item{data}{A matrix or (better) a data.frame with all variables appearing in \code{model_formula}.}

\item{model_formula}{A \code{\link[stats]{formula}} used for the analysis model.}

\item{y}{A vector or data.frame with \code{ncol = 1} containing the target variable with the missing values.}

\item{X}{A vector a data.frame containing the covariates influencing \code{y} via fixed effects.
If rows with missing values in \code{X} should also be imputed, put all your variables in a data.frame (or matrix)}

\item{Z}{A vector a data.frame containing the covariates influencing \code{y} via random effects}

\item{cl.id}{A factor (should come as data.frame or vector) containing the cluster IDs.}

\item{y_variable_name}{A character naming the variable to impute.}

\item{n.iter}{An integer defining the number of
iterations that should be run in each bunch of iterations.}

\item{M}{An integer defining the number of imputations that should be made.}

\item{n.chains}{An integer defining the number of Markov chains to be made.}

\item{burn.in}{A numeric between 0 and 1 defining the percentage of draws from the gibbs sampler
that should be discarded as burn in.}
}
\value{
A data.frame. It consists of the original \code{data} and \code{m}
additional variables with the imputed values.

A data.frame. It consists of the original \code{data} and \code{m}
additional variables with the imputed values.
}
\description{
The user has to passes to the function his data.
Optionally he pass his analysis model formula so that hmi runs the imputation model
in line with his analysis model formula.
And of course he can specify some parameters for the imputation routine
(like the number of imputations and iterations and the burn in percentage.)
The standard usage should be that the user gives his complete dataset
and his analysis model. But he also could just give y, X and Z and the cluser ID.

The user has to passes to the function his data.
Optionally he pass his analysis model formula so that hmi runs the imputation model
in line with his analysis model formula.
And of course he can specify some parameters for the imputation routine
(like the number of imputations and iterations and the burn in percentage.)
The standard usage should be that the user gives his complete dataset
and his analysis model. But he also could just give y, X and Z and the cluser ID.
}

